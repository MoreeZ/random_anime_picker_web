{"version":3,"sources":["actions/malActions.js","components/Carousel/CarouselHeader.jsx","components/Carousel/CarouselReady.jsx","components/Carousel/CarouselError.jsx","components/Carousel/CarouselEmpty.jsx","components/Carousel/Carousel.jsx","components/Section2.jsx","App.jsx","serviceWorker.js","reducers/mal.js","reducers/rootReducer.js","index.js"],"names":["pThrottle","require","pRetry","CarouselHeader","state","spinTime","handleSpin","e","anime","_this","props","randomAnime","Math","floor","random","length","fetchAnime","mal_id","attemptsToFetch","setInterval","animeDescState","error","loading","currentAnime","realElement","document","getElementById","passVirtualSpace","parentElement","childNodes","offsetWidth","realContainerPosition","arrayOfElements","i","nodesToArray","indexOf","adjustCenter","window","innerWidth","console","log","title","spinMe","resetButton","displayWinner","querySelector","carousel","arrow","usernameInput","listTypeMenuIcon","animeDescription","mainHeader","style","transition","transform","opacity","pointerEvents","setTimeout","display","href","url","handleReset","this","react_default","a","createElement","className","onSubmit","handleSubmit","TextField_default","autoComplete","hintText","errorText","id","errorStyle","position","top","left","fontSize","IconButton_default","tooltip","iconClassName","type","target","IconMenu_default","onItemClick","handleChangeListType","value","anchorOrigin","horizontal","vertical","targetOrigin","iconButtonElement","touch","expand_more_default","MenuItem_default","primaryText","RaisedButton_default","label","primary","onClick","secondary","Component","connect","mal","dispatch","Mal","then","j","res","payload","catch","err","fetchAnimeInfo","CarouselReady","shuffle","arr","_ref","renderXtimes","push","Fragment","map","key","eachAnime","src","image_url","alt","rel","filter","userAnime","CarouselFail","username","CarouselEmpty","formatListType","listType","Carousel","open","firstLoaded","handleOpen","setState","Object","objectSpread","handleClose","preventDefault","errorMessage","displayOption","val","_this2","_this$props","Carousel_CarouselHeader","CircularProgress_default","size","thickness","color","success","Carousel_CarouselReady","CarouselError","Carousel_CarouselEmpty","borderColor","zIndex","Dialog_default","modal","onRequestClose","noAnime","currentUser","newUsername","user","anime_stats","total_entries","entries","pages","allAnime","throttled","_loop","run","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","apply","toConsumableArray","filtered","each","watching_status","Number","JSON","parse","message","sent","abrupt","Response","stop","arguments","_callee2","_context2","retries","fetchUserAnimeList","clearError","changeUsername","Section2","animeInfo","episodes","genres","genre","index","name","status","aired","string","duration","rating","title_japanese","score","scored_by","rank","popularity","members","marginBottom","flexDirection","components_Carousel_Carousel","App","styles","components_Section2","Boolean","location","hostname","match","initState","undefined","action","response","statusMessage","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c66d7ed4.chunk.js","sourcesContent":["import { Mal } from \"node-myanimelist\";\r\nconst pThrottle = require(\"p-throttle\");\r\nconst pRetry = require(\"p-retry\");\r\n\r\n// const run = async () => {\r\n//   const response = await Mal.user(\"Aemnesias\", \"animelist\", \"all\", 1);\r\n//   return response;\r\n// };\r\n\r\nexport const fetchUserAnimeList = (username, listType) => {\r\n  return dispatch => {\r\n    dispatch({ type: \"LOADING_MAL_DATA\", newUsername: username });\r\n    Mal.user(username)\r\n      .then(user => user.anime_stats.total_entries)\r\n      .then(entries => {\r\n        const pages = Math.floor(entries / 300) + 1;\r\n        let allAnime = [];\r\n\r\n        const throttled = pThrottle(i => i, 1, 1000);\r\n\r\n        for (let i = 1; i <= pages; i++) {\r\n          throttled(i)\r\n            .then(() => {\r\n              const run = async () => {\r\n                const response = await Mal.user(username, \"animelist\", \"all\", i)\r\n                  .then(res => {\r\n                    allAnime.push(...res.anime);\r\n                    return res;\r\n                  })\r\n                  .then(res => {\r\n                    console.log(i, res);\r\n                    return res;\r\n                  })\r\n                  .then(() => {\r\n                    if (allAnime.length === entries) {\r\n                      console.log(\"allAnime\", allAnime);\r\n                      const filtered = allAnime.filter(\r\n                        each => each.watching_status === Number(listType)\r\n                      );\r\n                      return dispatch({\r\n                        type: \"MAL_DATA_REQUEST_SUCCESSFUL\",\r\n                        payload: filtered\r\n                      });\r\n                    }\r\n                  })\r\n                  .catch(err => {\r\n                    if (\r\n                      JSON.parse(err.error).message ===\r\n                      \"Something went wrong, please try again later\"\r\n                    ) {\r\n                      return dispatch({\r\n                        type: \"MAL_DATA_REQUEST_FAILED\",\r\n                        error: err\r\n                      });\r\n                    }\r\n                  });\r\n                return Response;\r\n              };\r\n              (async () => {\r\n                await pRetry(run, {\r\n                  retries: 5\r\n                });\r\n              })();\r\n            })\r\n            .catch(err => console.log(\"ERROR HAS OCCURED\", err));\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\n// export const fetchUserAnimeList = (username, listType) => {\r\n//   return dispatch => {\r\n//     dispatch({ type: \"LOADING_MAL_DATA\", newUsername: username });\r\n//     return Mal.user(username, \"animelist\", \"all\", \"3\")\r\n//       .then(MalData => {\r\n//         console.log(\"Response in Action: \", MalData);\r\n//         const filterType = MalData.anime.filter(\r\n//           each => each.watching_status === Number(listType)\r\n//         );\r\n//         return filterType;\r\n//       })\r\n//       .then(res =>\r\n//         dispatch({ type: \"MAL_DATA_REQUEST_SUCCESSFUL\", payload: res })\r\n//       )\r\n//       .catch(err => dispatch({ type: \"MAL_DATA_REQUEST_FAILED\", error: err }));\r\n//   };\r\n// };\r\n\r\nexport const fetchAnimeInfo = anime => {\r\n  return dispatch => {\r\n    dispatch({ type: \"LOADING_ANIME_INFO\", currentAnime: anime });\r\n    return Mal.anime(anime)\r\n      .then(j => j)\r\n      .then(res => dispatch({ type: \"ANIME_INFO_LOADED\", payload: res }))\r\n      .catch(err =>\r\n        dispatch({ type: \"ANIME_INFO_FAILED_TO_LOAD\", error: err })\r\n      );\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Input from \"material-ui/TextField\";\r\nimport Button from \"material-ui/RaisedButton\";\r\nimport IconButton from \"material-ui/IconButton\";\r\nimport MenuItem from \"material-ui/MenuItem\";\r\nimport NavigationExpandMoreIcon from \"material-ui/svg-icons/navigation/expand-more\";\r\nimport IconMenu from \"material-ui/IconMenu\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchAnimeInfo } from \"../../actions/malActions\";\r\n\r\nclass CarouselHeader extends Component {\r\n  state = { spinTime: 10000 };\r\n\r\n  handleSpin = e => {\r\n    const { anime } = this.props;\r\n    const nodesToArray = childNodes => {\r\n      let arrayOfElements = [];\r\n      for (var i = childNodes.length >>> 0; i--; ) {\r\n        arrayOfElements[i] = childNodes[i];\r\n      }\r\n      return arrayOfElements;\r\n    };\r\n\r\n    const randomAnime = anime[Math.floor(Math.random() * anime.length)];\r\n    //IMPORTANT => fetches\r\n    this.props.fetchAnime(randomAnime.mal_id);\r\n    let attemptsToFetch = 0;\r\n    setInterval(() => {\r\n      if (\r\n        this.props.animeDescState.error &&\r\n        !this.props.animeDescState.loading &&\r\n        attemptsToFetch <= 20\r\n      ) {\r\n        attemptsToFetch++;\r\n        this.props.fetchAnime(this.props.currentAnime);\r\n        // console.log(\"animeDescState\", this.props.animeDescState);\r\n      } else return;\r\n    }, 1000);\r\n\r\n    const realElement = document.getElementById(randomAnime.mal_id);\r\n\r\n    const passVirtualSpace =\r\n      (realElement.parentElement.parentElement.childNodes.length - 2) *\r\n      realElement.parentElement.offsetWidth;\r\n\r\n    const realContainerPosition =\r\n      nodesToArray(realElement.parentElement.childNodes).indexOf(realElement) *\r\n      (realElement.offsetWidth + 20);\r\n\r\n    const adjustCenter =\r\n      window.innerWidth / 2 -\r\n      18 -\r\n      Math.random() * (realElement.offsetWidth - 13);\r\n    console.log(randomAnime.title, realElement); // <== Logs the winner\r\n\r\n    // ====================== ANIMATIONS + DISPLAYS ========================\r\n    const { spinTime } = this.state; //ms\r\n\r\n    const spinMe = document.getElementById(\"spin-button\").parentElement;\r\n    const resetButton = document.getElementById(\"reset-spinner-button\")\r\n      .parentElement;\r\n    const displayWinner = document.querySelector(\".display-winner\");\r\n    const carousel = document.querySelector(\".carousel\");\r\n    const arrow = document.querySelector(\".arrow\");\r\n    const usernameInput = document.getElementById(\"username-input\")\r\n      .parentElement.parentElement;\r\n    const listTypeMenuIcon = document.getElementById(\"list-type-menu-icon\");\r\n    const animeDescription = document.getElementById(\r\n      \"absolute-anime-description\"\r\n    );\r\n    const mainHeader = document.querySelector(\".header-container\");\r\n    //================ STAGE 1 (instant onClick) ================\r\n    //run the carousel\r\n    carousel.style.transition =\r\n      \"transform \" + spinTime + \"ms cubic-bezier(0.165, 0.84, 0.44, 1)\";\r\n    carousel.style.transform =\r\n      \"translateX(-\" +\r\n      (passVirtualSpace + realContainerPosition - adjustCenter) +\r\n      \"px)\";\r\n\r\n    //hide spin button\r\n    spinMe.style.opacity = \"0\";\r\n    spinMe.style.transform = \"translateY(-40px)\";\r\n    spinMe.style.pointerEvents = \"none\";\r\n\r\n    //hide listType menu icon\r\n    listTypeMenuIcon.style.opacity = \"0\";\r\n    listTypeMenuIcon.style.transform = \"translateY(-40px)\";\r\n    listTypeMenuIcon.style.pointerEvents = \"none\";\r\n\r\n    //show arrow\r\n    arrow.style.transform = \"scaleY(1)\";\r\n\r\n    //hide usernameInput\r\n    usernameInput.style.transition = \"all 200ms ease\";\r\n    usernameInput.style.opacity = \"0\";\r\n    usernameInput.style.transform = \"translateY(-40px)\";\r\n    usernameInput.style.pointerEvents = \"none\";\r\n\r\n    //change color of \"ANIME\" in header\r\n    document.getElementById(\"anime-color-swapper\").style.transform =\r\n      \"translateY(-1.24em)\";\r\n    document.querySelector(\".pink-anime\").style.opacity = \"1\";\r\n    document.querySelector(\".blue-anime\").style.opacity = \"0\";\r\n\r\n    setTimeout(() => {\r\n      // \"show\" reset and hide spinMe ALSO set disply of listType icon to none\r\n      spinMe.style.display = \"none\";\r\n      resetButton.style.display = \"flex\";\r\n      listTypeMenuIcon.style.display = \"none\";\r\n      displayWinner.style.display = \"flex\";\r\n      usernameInput.style.display = \"none\";\r\n    }, 300);\r\n\r\n    // ================ STAGE 2 (after spinenr stops) ================\r\n    setTimeout(() => {\r\n      //show winner name\r\n      // displayWinner.textContent = randomAnime.title;\r\n      displayWinner.style.opacity = \"1\";\r\n      displayWinner.href = randomAnime.url;\r\n      displayWinner.style.transform = \"translateY(0px)\";\r\n      displayWinner.style.pointerEvents = \"all\";\r\n\r\n      //show reset button\r\n      resetButton.style.opacity = \"1\";\r\n      resetButton.style.transform = \"translateY(0px)\";\r\n      resetButton.style.pointerEvents = \"all\";\r\n      resetButton.style.display = \"flex\";\r\n\r\n      //make transition instant\r\n      carousel.style.transition = \"all 500ms ease\";\r\n\r\n      //show Anime description\r\n      animeDescription.style.transition = \"all 200ms ease-in-out\";\r\n      animeDescription.style.transform = \"translateX(0%)\";\r\n\r\n      //hide header\r\n      mainHeader.style.transition = \"all 200ms ease-in-out\";\r\n      mainHeader.style.transform = \"translateX(100%)\";\r\n    }, spinTime);\r\n  };\r\n\r\n  handleReset = e => {\r\n    const spinMe = document.getElementById(\"spin-button\").parentElement;\r\n    const resetButton = document.getElementById(\"reset-spinner-button\")\r\n      .parentElement;\r\n    const displayWinner = document.querySelector(\".display-winner\");\r\n    const carousel = document.querySelector(\".carousel\");\r\n    const arrow = document.querySelector(\".arrow\");\r\n    const usernameInput = document.getElementById(\"username-input\")\r\n      .parentElement.parentElement;\r\n    const listTypeMenuIcon = document.getElementById(\"list-type-menu-icon\");\r\n    const animeDescription = document.getElementById(\r\n      \"absolute-anime-description\"\r\n    );\r\n    const mainHeader = document.querySelector(\".header-container\");\r\n\r\n    //STAGE 3 (reset)\r\n    carousel.style.transform = \"translateX(-100px)\";\r\n    carousel.style.transition =\r\n      \"transform \" +\r\n      this.state.spinTime +\r\n      \"ms cubic-bezier(0.165, 0.84, 0.44, 1);\";\r\n\r\n    //hide winner name\r\n    displayWinner.style.opacity = \"0\";\r\n    displayWinner.style.transform = \"translateY(-50px)\";\r\n    displayWinner.style.pointerEvents = \"none\";\r\n\r\n    //hide reset button\r\n    resetButton.style.opacity = \"0\";\r\n    resetButton.style.transform = \"translateY(-50px)\";\r\n    resetButton.style.pointerEvents = \"none\";\r\n    //hide arrow\r\n    arrow.style.transform = \"scaleY(0)\";\r\n\r\n    //Hide anime Info\r\n    animeDescription.style.transform = \"translateX(-100%)\";\r\n    animeDescription.style.transition = \"all 500ms ease-in-out\";\r\n\r\n    //Show header\r\n    mainHeader.style.transition = \"all 500ms ease-in-out\";\r\n    mainHeader.style.transform = \"translateX(0%)\";\r\n\r\n    //change color of \"ANIME\" in header\r\n    document.getElementById(\"anime-color-swapper\").style.transform =\r\n      \"translateY(0px)\";\r\n    document.querySelector(\".pink-anime\").style.opacity = \"0\";\r\n    document.querySelector(\".blue-anime\").style.opacity = \"1\";\r\n\r\n    //show spin & usernameInput\r\n    setTimeout(() => {\r\n      //show spin button\r\n      spinMe.style.pointerEvents = \"all\";\r\n      spinMe.style.opacity = \"1\";\r\n      spinMe.style.transform = \"translateY(0px)\";\r\n\r\n      //show listType menu icon\r\n      listTypeMenuIcon.style.opacity = \"1\";\r\n      listTypeMenuIcon.style.transform = \"translateY(0px)\";\r\n      listTypeMenuIcon.style.pointerEvents = \"all\";\r\n\r\n      //show usernameInput\r\n      usernameInput.style.opacity = \"1\";\r\n      usernameInput.style.transform = \"translateY(0px)\";\r\n      usernameInput.style.pointerEvents = \"all\";\r\n      usernameInput.style.display = \"flex\";\r\n\r\n      // remove/add displays\r\n      displayWinner.style.display = \"none\";\r\n      resetButton.style.display = \"none\";\r\n      spinMe.style.display = \"flex\";\r\n      listTypeMenuIcon.style.display = \"flex\";\r\n    }, 300);\r\n  };\r\n\r\n  render() {\r\n    const { anime } = this.props;\r\n    return (\r\n      <div className=\"top-toolbar\">\r\n        <div className=\"toolbar-left\">\r\n          <form\r\n            className=\"mal-username-form\"\r\n            onSubmit={this.props.handleSubmit}\r\n          >\r\n            <Input\r\n              autoComplete=\"off\"\r\n              hintText=\"Your MyAnimeList username\"\r\n              errorText={this.props.error && \"Invalid username\"}\r\n              id=\"username-input\"\r\n              errorStyle={{\r\n                position: \"absolute\",\r\n                top: \"0\",\r\n                left: \"0\",\r\n                pointerEvents: \"none\",\r\n                fontSize: \"12px\"\r\n              }}\r\n            />\r\n            <IconButton\r\n              tooltip=\"Confirm\"\r\n              iconClassName=\"material-icons\"\r\n              type=\"submit\"\r\n            >\r\n              done\r\n            </IconButton>\r\n          </form>\r\n          <a className=\"display-winner\" href=\"loading\" target=\"_blank\">\r\n            View at MyAnimeList\r\n          </a>\r\n        </div>\r\n        <div className=\"toolbar-right\">\r\n          <IconMenu\r\n            onItemClick={this.props.handleChangeListType}\r\n            value={this.props.value}\r\n            anchorOrigin={{ horizontal: \"right\", vertical: \"top\" }}\r\n            targetOrigin={{ horizontal: \"right\", vertical: \"top\" }}\r\n            iconButtonElement={\r\n              <IconButton touch={true} id=\"list-type-menu-icon\">\r\n                <NavigationExpandMoreIcon />\r\n              </IconButton>\r\n            }\r\n          >\r\n            <MenuItem primaryText=\"Plan To Watch\" value=\"6\" />\r\n            <MenuItem primaryText=\"Currently Watching\" value=\"1\" />\r\n            <MenuItem primaryText=\"Completed\" value=\"2\" />\r\n            <MenuItem primaryText=\"On Hold\" value=\"3\" />\r\n            <MenuItem primaryText=\"Dropped\" value=\"4\" />\r\n          </IconMenu>\r\n          <Button\r\n            label=\"ROLL A RANDOM ANIME\"\r\n            primary={true}\r\n            onClick={anime.length > 0 ? this.handleSpin : () => {}}\r\n            id=\"spin-button\"\r\n            style={{\r\n              transition: \"all 200ms ease\"\r\n            }}\r\n          />\r\n          <Button\r\n            label=\"RESET THE SPINNER\"\r\n            secondary={true}\r\n            onClick={anime.length > 0 ? this.handleReset : () => {}}\r\n            id=\"reset-spinner-button\"\r\n            style={{\r\n              display: \"none\",\r\n              transform: \"translateY(-20px)\",\r\n              opacity: \"0\",\r\n              transition: \"all 200ms ease\",\r\n              pointerEvents: \"none\"\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    animeDescState: state.mal.animeDescState,\r\n    currentAnime: state.mal.currentAnime\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchAnime: anime => {\r\n      dispatch(fetchAnimeInfo(anime));\r\n    }\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CarouselHeader);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass CarouselReady extends Component {\r\n  state = {};\r\n  shuffle = arr => {\r\n    for (let i = arr.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [arr[i], arr[j]] = [arr[j], arr[i]];\r\n    }\r\n    return arr;\r\n  };\r\n  render() {\r\n    const { anime } = this.props;\r\n    let renderXtimes = [];\r\n    //change the value of i < X to render more virtual elements in the spinner\r\n    if (anime.length > 0) {\r\n      for (let i = 0; i < 80; i += anime.length) {\r\n        renderXtimes.push(i);\r\n      }\r\n    }\r\n    console.log(\"anime in current listType\", anime);\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"arrow\" />\r\n        <div className=\"carousel\">\r\n          {renderXtimes.map(e => (\r\n            <div className=\"virtual-container\" key={e}>\r\n              {anime.map(eachAnime => (\r\n                <div\r\n                  className=\"virtual-image each-image\"\r\n                  key={eachAnime.mal_id}\r\n                >\r\n                  <img src={eachAnime.image_url} alt={eachAnime.title} />\r\n                  <div className=\"anime-quickdesc\">\r\n                    <a\r\n                      href={eachAnime.url}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      {eachAnime.title}\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n          <div className=\"real-container\">\r\n            {this.shuffle(anime).map(eachAnime => (\r\n              <div\r\n                className=\"real-image each-image\"\r\n                key={eachAnime.mal_id}\r\n                id={eachAnime.mal_id}\r\n              >\r\n                <img src={eachAnime.image_url} alt={eachAnime.title} />\r\n                <div className=\"anime-quickdesc\">\r\n                  <a\r\n                    href={eachAnime.url}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    {eachAnime.title}\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"virtual-container\">\r\n            {anime\r\n              .filter(eachAnime => anime.indexOf(eachAnime) < 3)\r\n              .map(eachAnime => (\r\n                <div\r\n                  className=\"virtual-image each-image\"\r\n                  key={eachAnime.mal_id}\r\n                >\r\n                  <img src={eachAnime.image_url} alt={eachAnime.title} />\r\n                  <div className=\"anime-quickdesc\">\r\n                    <a\r\n                      href={eachAnime.url}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      {eachAnime.title}\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  if (state.mal.userAnime) {\r\n    if (state.mal.userAnime.length === 0) {\r\n      return {\r\n        anime: state.mal.userAnime\r\n      };\r\n    } else {\r\n      return {\r\n        anime: state.mal.userAnime\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      anime: []\r\n    };\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps)(CarouselReady);\r\n","import React, { Component } from \"react\";\r\n\r\nclass CarouselFail extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"error-message-container\">\r\n        <h1 className=\"error-header\">\r\n          The username \"{this.props.username}\" has not been found.\r\n        </h1>\r\n        <h4 className=\"error-subheading\">\r\n          Make sure the username you have entered is verified at MyAnimeList.\r\n        </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CarouselFail;\r\n","import React, { Component } from \"react\";\r\n\r\nclass CarouselEmpty extends Component {\r\n  state = {};\r\n  formatListType = listType => {\r\n    switch (listType) {\r\n      case \"6\":\r\n        return \"Plan To Watch\";\r\n      case \"1\":\r\n        return \"Currently Watching\";\r\n      case \"2\":\r\n        return \"Completed\";\r\n      case \"4\":\r\n        return \"Dropped\";\r\n      case \"3\":\r\n        return \"On Hold\";\r\n      default:\r\n        return \"Select list type\";\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"error-message-container\">\r\n        <h1 className=\"error-header\">\r\n          The \"{this.formatListType(this.props.listType)}\" List of{\" \"}\r\n          {this.props.username} is empty.\r\n        </h1>\r\n        <h4 className=\"error-subheading\">\r\n          {this.props.username} must have at least one anime in \"\r\n          {this.formatListType(this.props.listType)}\".\r\n        </h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CarouselEmpty;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUserAnimeList } from \"../../actions/malActions\";\r\nimport CircularProgress from \"material-ui/CircularProgress\";\r\n\r\nimport CarouselHeader from \"./CarouselHeader\";\r\nimport CarouselReady from \"./CarouselReady\";\r\nimport CarouselError from \"./CarouselError\";\r\nimport CarouselEmpty from \"./CarouselEmpty\";\r\nimport IconButton from \"material-ui/IconButton\";\r\nimport Dialog from \"material-ui/Dialog\";\r\n\r\nclass Carousel extends Component {\r\n  state = {\r\n    listType: \"6\",\r\n    open: false,\r\n    firstLoaded: false\r\n  };\r\n  handleOpen = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      open: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      open: false\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { fetchAnime } = this.props;\r\n    console.log(\"COMPONENT HAS MOUNTED\");\r\n    fetchAnime(this.props.username, this.state.listType);\r\n    let attemptsToFetch = 0;\r\n    setInterval(() => {\r\n      if (\r\n        this.props.errorMessage === \"Internal Server Error\" &&\r\n        !this.props.displayOption.loading &&\r\n        attemptsToFetch <= 20\r\n      ) {\r\n        attemptsToFetch++;\r\n        fetchAnime(this.props.username, this.state.listType);\r\n      } else {\r\n        return;\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { fetchAnime } = this.props;\r\n    if (e.target[0].value !== \"\" && e.target[0] !== null) {\r\n      fetchAnime(e.target[0].value, this.state.listType);\r\n      let attemptsToFetch = 0;\r\n      setInterval(() => {\r\n        if (\r\n          this.props.errorMessage === \"Internal Server Error\" &&\r\n          !this.props.displayOption.loading &&\r\n          attemptsToFetch <= 20\r\n        ) {\r\n          attemptsToFetch++;\r\n          fetchAnime(this.props.username, this.state.listType);\r\n        } else return;\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  handleChangeListType = (e, val) => {\r\n    this.setState({\r\n      ...this.state,\r\n      listType: val.props.value\r\n    });\r\n    this.props.fetchAnime(this.props.username, val.props.value);\r\n  };\r\n\r\n  render() {\r\n    const { anime, displayOption } = this.props;\r\n    return (\r\n      <div className=\"main-carousel\">\r\n        <CarouselHeader\r\n          value={this.state.listType}\r\n          anime={anime}\r\n          handleSubmit={this.handleSubmit}\r\n          error={this.props.errorMessage === \"Bad Request\"}\r\n          handleChangeListType={this.handleChangeListType}\r\n        />\r\n        <div className=\"carousel-container\">\r\n          {displayOption.loading ||\r\n          this.props.errorMessage === \"Internal Server Error\" ? (\r\n            <div className=\"loading-container\">\r\n              <CircularProgress\r\n                size={150}\r\n                thickness={10}\r\n                color=\"#f1f1f1\"\r\n                className=\"circular-progress\"\r\n              />\r\n            </div>\r\n          ) : displayOption.success ? (\r\n            <CarouselReady />\r\n          ) : this.props.errorMessage === \"Bad Request\" ? (\r\n            <CarouselError username={this.props.username} />\r\n          ) : (\r\n            <CarouselEmpty\r\n              listType={this.state.listType}\r\n              username={this.props.username}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"bottom-toolbar\">\r\n          <IconButton\r\n            style={{\r\n              borderColor: \"white\",\r\n              zIndex: \"3\"\r\n            }}\r\n            iconClassName=\"material-icons\"\r\n            type=\"submit\"\r\n            onClick={this.handleOpen}\r\n          >\r\n            contact_mail\r\n          </IconButton>\r\n          <a\r\n            href=\"https://play.google.com/store/apps/details?id=com.randomanimepicker\"\r\n            id=\"play-icon\"\r\n          >\r\n            <span>Download my app with many more features on Google Play!</span>\r\n            <img\r\n              src=\"https://downloads.andyroid.net/wp-content/uploads/2015/09/Google-Play-Store-icon.png\"\r\n              alt=\"PLAY\"\r\n            />\r\n          </a>\r\n          <Dialog\r\n            title=\"Contact the developer\"\r\n            modal={false}\r\n            open={this.state.open}\r\n            onRequestClose={this.handleClose}\r\n          >\r\n            <span>\r\n              Email: <span>moreez@protonmail.com</span>\r\n            </span>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(\"updated user anime\", state.mal.userAnime);\r\n  if (state.mal.userAnime) {\r\n    if (state.mal.userAnime.length === 0) {\r\n      return {\r\n        anime: state.mal.userAnime,\r\n        displayOption: state.mal.displayOption,\r\n        noAnime: true,\r\n        errorMessage: state.mal.errorMessage,\r\n        username: state.mal.currentUser\r\n      };\r\n    } else {\r\n      return {\r\n        anime: state.mal.userAnime,\r\n        displayOption: state.mal.displayOption,\r\n        noAnime: false,\r\n        errorMessage: state.mal.errorMessage,\r\n        username: state.mal.currentUser\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      anime: [],\r\n      displayOption: state.mal.displayOption,\r\n      noAnime: false,\r\n      errorMessage: state.mal.errorMessage,\r\n      username: state.mal.currentUser\r\n    };\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchAnime: (username, listType) => {\r\n      dispatch(fetchUserAnimeList(username, listType));\r\n    },\r\n    clearError: anime => {\r\n      dispatch({ type: \"CLEAR_ERROR_MESSAGE\", payload: anime });\r\n    },\r\n    changeUsername: username => {\r\n      dispatch({ type: \"MAL_DATA_REQUEST_SUCCESSFUL\", username: username });\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Carousel);\r\n","import React, { Component } from \"react\";\r\nimport Carousel from \"./Carousel/Carousel\";\r\nimport { connect } from \"react-redux\";\r\nimport CircularProgress from \"material-ui/CircularProgress\";\r\n\r\nclass Section2 extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    const { animeInfo } = this.props;\r\n    return (\r\n      <div id=\"section2\" className=\"section\">\r\n        <div className=\"mal-header\">\r\n          <div id=\"absolute-anime-description\">\r\n            {animeInfo ? (\r\n              <div className=\"anime-details\">\r\n                <div className=\"anime-info\">\r\n                  <h3 className=\"info-heading\">Information</h3>\r\n                  <ul className=\"info-list\">\r\n                    <li>\r\n                      <span className=\"bold\">Episodes: </span>\r\n                      <span className=\"pink bold\">{animeInfo.episodes}</span>\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"bold\">Genres: </span>\r\n                      {animeInfo.genres.map((genre, index) => {\r\n                        if (index === animeInfo.genres.length - 1) {\r\n                          return <span key={genre.mal_id}>{genre.name}</span>;\r\n                        } else {\r\n                          return <span key={genre.mal_id}>{genre.name}, </span>;\r\n                        }\r\n                      })}\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"bold\">Status: </span>\r\n                      {animeInfo.status}\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"bold\">Aired: </span>\r\n                      {animeInfo.aired.string}\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"bold\">Duration: </span>\r\n                      {animeInfo.duration}\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"bold\">Rating: </span>\r\n                      {animeInfo.rating}\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n\r\n                <div className=\"anime-desc-main\">\r\n                  <h2>{animeInfo.title}</h2>\r\n                  <h5>{animeInfo.title_japanese}</h5>\r\n                </div>\r\n\r\n                <div className=\"anime-ratings\">\r\n                  <h3 className=\"rating-heading\">Ratings</h3>\r\n                  <ul className=\"rating-list\">\r\n                    <li>\r\n                      <span className=\"bold\">Score: </span>\r\n                      <span className=\"pink bold\">{animeInfo.score}</span>\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"bold\">Scored by: </span>#\r\n                      {animeInfo.scored_by}\r\n                    </li>\r\n\r\n                    <li>\r\n                      <span className=\"bold\">Ranked: </span>#{animeInfo.rank}\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"bold\">Popularity: </span>#\r\n                      {animeInfo.popularity}\r\n                    </li>\r\n                    <li>\r\n                      <span className=\"bold\">Members: </span>\r\n                      {animeInfo.members}\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"loading-container\">\r\n                <CircularProgress\r\n                  size={150}\r\n                  thickness={10}\r\n                  color=\"#f1f1f1\"\r\n                  className=\"circular-progress\"\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"header-container\">\r\n            <div\r\n              style={{\r\n                fontSize: \"2em\",\r\n                marginBottom: \"20px\",\r\n                color: \"white\"\r\n              }}\r\n            >\r\n              MyAnimeList\r\n            </div>\r\n            <h5\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\"\r\n              }}\r\n            >\r\n              RANDOM{\" \"}\r\n              <span id=\"anime-color-swapper\">\r\n                <span className=\"blue-anime\">ANIME</span>\r\n                <span className=\"pink-anime\">ANIME</span>\r\n              </span>{\" \"}\r\n              PICKER\r\n            </h5>\r\n          </div>\r\n        </div>\r\n        <Carousel />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  if (state.mal.animeInfo) {\r\n  }\r\n  return {\r\n    animeInfo: state.mal.animeInfo,\r\n    animeDescState: state.mal.animeDescState\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Section2);\r\n","import React from \"react\";\nimport { MuiThemeProvider } from \"material-ui/styles\";\nimport Section2 from \"./components/Section2\";\n\nfunction App() {\n  return (\n    <MuiThemeProvider>\n      <div className=\"App\">\n        <main>\n          <Section2 />\n        </main>\n      </div>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  userAnime: undefined,\r\n  animeInfo: undefined,\r\n  displayOption: {\r\n    success: false,\r\n    loading: false,\r\n    error: false\r\n  },\r\n  animeDescState: {\r\n    success: false,\r\n    loading: false,\r\n    error: false\r\n  },\r\n  errorMessage: \"\",\r\n  currentUser: \"moonbox\",\r\n  currentAnime: {}\r\n};\r\n\r\nconst mal = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOADING_MAL_DATA\":\r\n      return {\r\n        ...state,\r\n        displayOption: {\r\n          success: false,\r\n          loading: true,\r\n          error: false\r\n        },\r\n        currentUser: action.newUsername\r\n      };\r\n    case \"MAL_DATA_REQUEST_SUCCESSFUL\":\r\n      console.log(\"response in reducer: \", action.payload);\r\n      return {\r\n        ...state,\r\n        userAnime: action.payload,\r\n        displayOption: {\r\n          success: true,\r\n          loading: false,\r\n          error: false\r\n        },\r\n        errorMessage: \"\"\r\n      };\r\n    case \"MAL_DATA_REQUEST_FAILED\":\r\n      console.log(\"MAL FAILED\", action.error);\r\n      return {\r\n        ...state,\r\n        displayOption: {\r\n          success: false,\r\n          loading: false,\r\n          error: true\r\n        },\r\n        errorMessage: action.error.response.statusMessage\r\n      };\r\n    case \"LOADING_ANIME_INFO\":\r\n      return {\r\n        ...state,\r\n        animeDescState: {\r\n          success: false,\r\n          loading: true,\r\n          error: false\r\n        },\r\n        currentAnime: action.currentAnime\r\n      };\r\n    case \"ANIME_INFO_LOADED\":\r\n      return {\r\n        ...state,\r\n        animeInfo: action.payload,\r\n        animeDescState: {\r\n          success: true,\r\n          loading: false,\r\n          error: false\r\n        }\r\n      };\r\n    case \"ANIME_INFO_FAILED_TO_LOAD\":\r\n      console.log(\"FAILED TO LOAD ANIME INFO\", action.error);\r\n      return {\r\n        ...state,\r\n        animeDescState: {\r\n          success: false,\r\n          loading: false,\r\n          error: true\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// loadingError: JSON.parse(\r\n//   JSON.parse(action.error.message.replace(/^400 - /, \"\"))\r\n// )\r\n\r\nexport default mal;\r\n","import { combineReducers } from \"redux\";\r\nimport mal from \"./mal\";\r\n\r\nconst rootReducer = combineReducers({\r\n  mal: mal\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./css_imports.js\";\n\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk)\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}